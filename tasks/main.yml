---
- name: "Import {{ ansible_os_family }} Tasks"
  include_tasks: "{{ ansible_os_family }}/main.yml"

- set_fact:
    apache_merged_vhosts: "{{ apache_vhosts }}"

- set_fact:
    apache_merged_vhosts: "{{ apache_merged_vhosts + apache_ssl_vhosts }}"
  when: apache_vhosts and apache_ssl_vhosts

- name: Create Domain Directory Structure
  file:
    path: "{{ apache_vhost_base_directory }}/{{ item[0]['server_name'] }}/{{ item[1] }}"
    state: directory
    owner: "{{ item[0]['owner'] }}"
    group: "{{ item[0]['group'] }}"
  with_nested:
    - "{{ apache_merged_vhosts }}"
    - "{{ apache_vhost_directories }}"

- name: Create Additional Directories
  file:
    path: "{{ item[1] }}"
    state: directory
    owner: "{{ item[0]['owner'] }}"
    group: "{{ item[0]['group'] }}"
  with_nested:
    - "{{ apache_merged_vhosts }}"
    - "{{ ['additional_directories']|map('extract', apache_merged_vhosts) }}"

- name: "Create/Update main Apache configuration file"
  template:
    dest: "{{ _apache_httpd_conf_path[ansible_distribution] }}"
    src: "httpd-{{ ansible_os_family }}-{{ansible_distribution_major_version}}.conf.j2"
    owner: root
    group: root
    backup: yes
  when: ansible_os_family != "Gentoo"

- name: "Create vhosts configuration directory"
  file:
    path: "{{ _apache_vhosts_conf_path[ansible_distribution] }}"
    owner: root
    group: root
    state: directory

- name: "Create vhost files"
  template:
    dest: "{{ _apache_vhosts_conf_path[ansible_distribution] }}/{{ item['server_name'] | replace('.', '_') }}.conf"
    src: "vhost.conf.j2"
    owner: root
    group: root
  with_items:
    - "{{ apache_vhosts }}"

- name: "Create ssl-vhost files"
  template:
    dest: "{{ _apache_vhosts_conf_path[ansible_distribution] }}/{{item['server_name'] | replace('.', '_') }}-ssl.conf"
    src: "vhost-ssl.conf.j2"
    owner: root
    group: root
  when: apache_ssl_vhosts and not apache_use_letsencrypt
  with_items:
    - "{{ apache_ssl_vhosts }}"

- name: "Including certbot role"
  include_role:
    name: 'the-paulus.certbot2'
  when: apache_use_letsencrypt

- name: Import SELinux Tasks
  include_tasks: selinux.yml
  when: ansible_selinux['status'] is defined and ansible_selinux['status'] == "enabled"

- name: "Enable Firewalld Rules"
  firewalld:
    service: "{{ item }}"
    state: enabled
    immediate: yes
    permanent: yes
  with_items:
    - http
    - https
  ignore_errors: yes

- name: "Enable and start apache"
  service:
    name: "{{ _apache_service_name[ansible_distribution] }}"
    enabled: yes
    state: restarted
